<html>
<head>
<title>Fly3D Standard Plugins Guide</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../fly-refes.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<h1 align="left">Fly3D Standard Plugins Guide</h1>
<p>Fly3D SDK 2.0 features various standard plugins that offer a great variety 
  of classes, implementing useful entities and special effects that can be easily 
  re-used in a new game or application. The goal of this guide is to discuss and 
  exemplify the use of some of these plugins and classes, and to uncover some 
  particularities of the classes. Examples on how the standard plugins can be 
  linked to a new plugin or application are also provided.</p>
<p>It is important to notice that this guide focus on the programming tasks needed 
  to deal with the covered classes. The objects' parameter values must be set 
  in the <b>flyEditor.exe</b> program, and many of the examples featured in the 
  pages below rely on the fact that these parameters are already assigned with 
  a valid value.</p>
<p>These are the topics covered by this guide:</p>
<blockquote> 
  <p><a href="htm/linking.htm">Linking a standard plugin to a new plugin or application</a><br>
    <a href="htm/light.htm">Lights on: using the 'light' class</a><br>
    <a href="htm/sound.htm">How does it sound? Using the 'sound' class</a><br>
    <a href="htm/explode.htm">Time to blow things up: using the 'explode' class</a><br>
    <a href="htm/followp.htm">Leaving a trail behind: using the 'followpath' class</a><br>
    <a href="htm/gun.htm">Target, aim, fire! Shooting with 'gun', 'gun_projectile' 
    and its derived classes</a><br>
    <a href="htm/viewport.htm">A matter of points-of-view: using the 'viewport' 
    class</a></p>
</blockquote>
</body>
</html>
